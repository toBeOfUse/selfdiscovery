---
import type { CollectionEntry } from "astro:content";
import { formatDate } from "../date";
import Image from "./Image.vue";
import { experimental_AstroContainer } from "astro/container";

interface Props {
  entry: CollectionEntry<"blog">;
  standalone?: boolean;
}

const props = Astro.props;

const meta = props.entry.data;

const { Content } = await props.entry.render();

let introHtml = "";
let hasMore = false;
if (!props.standalone) {
  const container = await experimental_AstroContainer.create();
  introHtml = await container.renderToString(Content);
  const MORE_MARKER = "<!-- more -->";
  const readMorePos = introHtml.indexOf(MORE_MARKER);
  if (readMorePos != -1) {
    introHtml = introHtml.slice(0, readMorePos);
    hasMore = true;
  }
}
---

<div
  class="my-4 p-2 md:p-4 flex flex-col items-start gap-3 max-width-[450px] self-center border-0 md:border-2"
>
  {
    meta.image ? (
      meta.image_style === "old" ? (
        <div class="relative" id="post-top">
          <Image assetPath={meta.image} alt={meta.image_alt} />
          <h1 class="text-2xl absolute rounded py-1 px-2 left-2 bottom-2 bg-white text-black">
            <a href={props.standalone ? "/blog/" : "/blog/" + props.entry.slug}>
              {meta.title}
            </a>
          </h1>
          <p class="m-0 absolute rounded py-1 px-2 top-2 right-2 text-sm italic bg-white text-black">
            {meta.date_as_string ?? formatDate(meta.date)}
          </p>
        </div>
      ) : (
        <div>
          <Image
            assetPath={meta.image}
            alt={meta.image_alt}
            class="max-h-[70vh] object-contain bg-gray-50 rounded"
          />
          <h1 class="text-2xl my-2">
            <a
              id="post-top"
              href={props.standalone ? "/blog/" : "/blog/" + props.entry.slug}
            >
              {meta.title}
            </a>
          </h1>
          <p class="text-sm italic ">{meta.date_as_string ?? formatDate(meta.date)}</p>
        </div>
      )
    ) : (
      <>
        <p>From {meta.date_as_string ?? formatDate(meta.date)}</p>
        <a href={props.standalone ? "/blog/" : "/blog/" + props.entry.slug}>
          <h1 class="text-2xl">{meta.title}</h1>
        </a>
      </>
    )
  }
  <div class="blog-post">
    {
      !props.standalone ? (
        <>
          <div set:html={introHtml} />
        </>
      ) : (
        <Content />
      )
    }
  </div>
  {
    !props.standalone && hasMore && (
      <a class="underline shrink-0 mr-2" href={`/blog/${props.entry.slug}#post-top`}>
        Read More{" "}
        <img
          src="/right-fleuron.svg"
          style="display: inline; height: 1em; width: auto"
          alt="Right-pointing flowery thing"
        />
      </a>
    )
  }
  <p class="bg-gray-100 p-2 my-1 w-full">
    <span>Tagged as</span>
    {
      // >:( https://github.com/withastro/astro/issues/6011
      // prettier-ignore
      meta.tags.map((tag, i) => (
        <>
          <a href={`/blog/tags/${tag}`} class="italic underline">{tag}</a>{i !== meta.tags.length - 1 && `, `}
        </>
      ))
    }.
  </p>
</div>

<style lang="scss" is:global>
  @import "../scss/content.scss";
  .blog-post {
    @include content;
  }
</style>
