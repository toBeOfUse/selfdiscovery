---
import Post from "../../../components/Post.astro";
import Island from "../../../layouts/Island.astro";

import { getCollection } from "astro:content";
import PageMeta from "../../../components/PageMeta.astro";

// TODO: paginate (similar to /blog/page/[page].astro)
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog", (entry) => !entry.data.unlisted);
  const tags = new Set(blogEntries.flatMap((entry) => entry.data.tags));
  return Array.from(tags).map((tag) => ({
    params: { tag },
  }));
}

const posts = await getCollection(
  "blog",
  (entry) => !entry.data.unlisted && entry.data.tags.includes(Astro.params.tag)
);

const firstPage = posts.sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

function pluralize(count: number, singular: string, plural?: string) {
  if (count === 1) return singular;
  return plural ?? singular + "s";
}
---

<style is:global>
  :root {
    --main-bg: #fffbfa;
    --content-pane-bg: white;
    --shadow-color: rgb(100, 100, 100);
  }
</style>

<Island
  title={"Tagged: " + Astro.params.tag}
  titleLink="/blog/"
  image="typewriter.png"
  imageLink="/blog"
>
  <PageMeta
    slot="head"
    title={`Tagged: "${Astro.params.tag}"`}
    description="My highly meaningful thoughts."
    image="typewriter.png"
  />
  <div slot="island">
    <p class="my-8">
      There {pluralize(posts.length, "is", "are")}
      {" " + posts.length + " "}
      {pluralize(posts.length, "post")} tagged "{Astro.params.tag}."
    </p>
    <!-- TODO: probably show tag accordion here too -->
  </div>
  <!--
    TODO: replace with BlogPageContent component based on the content
    from [page].astro
  -->
  <div class="flex flex-col">
    {
      firstPage.map(async (p, i) => {
        return <Post entry={p} />;
      })
    }
  </div>
</Island>
