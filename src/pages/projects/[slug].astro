---
import ProjectItem from "../../components/ProjectItem.vue";
import PageMeta from "../../components/PageMeta.astro";
import Island from "../../layouts/Island.astro";
import { getCollection } from "astro:content";
import ImageSlideshow from "../../components/ImageSlideshow.vue";
import { imageAsset } from "../../images";
import { getImage } from "astro:assets";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();
const description = entry.data.description || remarkPluginFrontmatter.description;
const images = await Promise.all(
  entry.data.images?.map(async (i) => {
    const metadata = await imageAsset("projects" + i.url);
    const optimizedImage = await getImage({ src: metadata, quality: 95 });
    return { ...i, metadata, optimizedImage };
  }) ?? []
);
---

<style is:global>
  :root {
    --main-bg: #fcfcfc;
    --content-pane-bg: white;
    --shadow-color: rgb(100, 100, 100);
  }
</style>

<Island title={entry.data.title} titleLink="/projects/" image="circuit.png">
  <PageMeta
    title={entry.data.title}
    description={description}
    image={entry.data.image ? "projects" + entry.data.image : undefined}
    slot="head"
  />
  <div class="text-center block" slot="island">
    <p class="my-2">{description}</p>
    <a href={"/projects/#" + entry.slug} class="underline">(back to all projects)</a>
  </div>
  <div class="pt-2 md:py-8">
    <ProjectItem roundedTop roundedBottom entry={entry} :standalone="true">
      {
        !!entry.data.images?.length && (
          <ImageSlideshow
            client:load
            images={images.map((i) => ({
              src: i.optimizedImage.src,
              alt: i.metadata.alt ?? i.alt ?? "",
            }))}
          />
        )
      }
      <Content />
    </ProjectItem>
  </div>
</Island>
